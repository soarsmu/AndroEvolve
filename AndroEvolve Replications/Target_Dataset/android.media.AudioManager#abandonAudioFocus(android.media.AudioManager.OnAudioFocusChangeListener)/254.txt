package X;

import android.media.AudioAttributes;
import android.media.AudioFocusRequest;
import android.media.AudioManager;
import android.os.Build;

/* renamed from: X.0dT  reason: invalid class name and case insensitive filesystem */
public final class C05070dT {
    public static C05070dT A05;
    public AudioFocusRequest A00;
    public int A01;
    public boolean A02;
    public final AudioManager.OnAudioFocusChangeListener A03 = new C05100dX();
    public final AudioManager A04 = ((AudioManager) AnonymousClass0GZ.A00().getSystemService("audio"));

    public static C05070dT A00() {
        C05070dT r0 = A05;
        if (r0 != null) {
            return r0;
        }
        C05070dT r02 = new C05070dT();
        A05 = r02;
        return r02;
    }

    public final void A01() {
        if (C04000Zo.A00.A00.getBoolean("audio_ducking_enabled", false) && !this.A02) {
            this.A02 = true;
            this.A01 = ((AudioManager) AnonymousClass0GZ.A00().getSystemService("audio")).getStreamVolume(3);
            int min = Math.min(((AudioManager) AnonymousClass0GZ.A00().getSystemService("audio")).getStreamVolume(3) - 3, 3);
            ((AudioManager) AnonymousClass0GZ.A00().getSystemService("audio")).setStreamVolume(3, Math.min(this.A01, min), 0);
            AnonymousClass0LA.A0B("AudioDuckingManager", AnonymousClass00B.A00("Ducking audio setting volume to ", min));
        }
    }

    public final void A02() {
        int requestAudioFocus;
        AudioFocusRequest audioFocusRequest;
        if (Build.VERSION.SDK_INT < 26 || (audioFocusRequest = this.A00) == null) {
            requestAudioFocus = this.A04.requestAudioFocus(this.A03, 5, 3);
        } else {
            requestAudioFocus = this.A04.requestAudioFocus(audioFocusRequest);
        }
        if (requestAudioFocus == 1) {
            AnonymousClass0LA.A0D("AudioDuckingManager", "Audio focus success");
        } else {
            AnonymousClass0LA.A0C("AudioDuckingManager", "Audio focus request failed");
        }
    }

    public final void A03() {
        if (C04000Zo.A00.A00.getBoolean("audio_ducking_enabled", false) && this.A02) {
            AnonymousClass0LA.A0B("AudioDuckingManager", AnonymousClass00B.A00("Unducking audio setting volume to ", this.A01));
            ((AudioManager) AnonymousClass0GZ.A00().getSystemService("audio")).setStreamVolume(3, this.A01, 0);
            this.A02 = false;
        }
    }

    public final void A04() {
        int abandonAudioFocus;
        AudioFocusRequest audioFocusRequest;
        if (Build.VERSION.SDK_INT < 26 || (audioFocusRequest = this.A00) == null) {
            abandonAudioFocus = this.A04.abandonAudioFocus(this.A03);
        } else {
            abandonAudioFocus = this.A04.abandonAudioFocusRequest(audioFocusRequest);
        }
        if (abandonAudioFocus == 1) {
            AnonymousClass0LA.A0D("AudioDuckingManager", "Abandon audio focus success");
        } else {
            AnonymousClass0LA.A0C("AudioDuckingManager", "Abandon audio focus failed");
        }
    }

    public C05070dT() {
        if (Build.VERSION.SDK_INT >= 26) {
            this.A00 = new AudioFocusRequest.Builder(3).setAudioAttributes(new AudioAttributes.Builder().setLegacyStreamType(5).setContentType(1).setUsage(16).build()).setWillPauseWhenDucked(true).setOnAudioFocusChangeListener(this.A03).build();
        }
    }
}
